import tkinter as tk
from tkinter import ttk


class FixClientSimulator(tk.Frame):
    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        master.title("FIX Client Simulator")

        # Default values for connection details
        self.protocol = "FIX"
        self.host = "localhost"
        self.port = 5000
        self.connection_status = "Disconnected"

        # GUI setup
        self.setup_ui()

    def setup_ui(self):
        # Main content frame
        self.main_frame = tk.Frame(self)
        self.main_frame.pack(fill="both", expand=True)

        # Status bar at the bottom
        self.status_bar = tk.Frame(self.master, relief=tk.SUNKEN, borderwidth=1)
        self.status_bar.pack(side=tk.BOTTOM, fill=tk.X)

        # Labels for each column
        self.protocol_label = ttk.Label(self.status_bar, text=f"Protocol: {self.protocol}", anchor="w")
        self.host_label = ttk.Label(self.status_bar, text=f"Host: {self.host}", anchor="w")
        self.port_label = ttk.Label(self.status_bar, text=f"Port: {self.port}", anchor="w")
        self.status_label = ttk.Label(self.status_bar, text=f"Status: {self.connection_status}", anchor="w")

        # Grid layout
        self.status_bar.columnconfigure((0, 1, 2, 3), weight=1)  # Distribute space equally
        self.protocol_label.grid(row=0, column=0, padx=10, pady=5, sticky="w")
        self.host_label.grid(row=0, column=1, padx=10, pady=5, sticky="w")
        self.port_label.grid(row=0, column=2, padx=10, pady=5, sticky="w")
        self.status_label.grid(row=0, column=3, padx=10, pady=5, sticky="w")

        # Button to simulate connection toggle
        self.toggle_button = ttk.Button(self.master, text="Toggle Connection", command=self.toggle_connection)
        self.toggle_button.pack(pady=10)

    def update_status(self):
        """Update the status labels dynamically."""
        self.protocol_label.config(text=f"Protocol: {self.protocol}")
        self.host_label.config(text=f"Host: {self.host}")
        self.port_label.config(text=f"Port: {self.port}")
        self.status_label.config(text=f"Status: {self.connection_status}")

    def toggle_connection(self):
        """Simulates toggling the connection status."""
        self.connection_status = "Connected" if self.connection_status == "Disconnected" else "Disconnected"
        self.update_status()


# Run the application
if __name__ == "__main__":
    root = tk.Tk()
    app = FixClientSimulator(master=root)
    app.pack(fill="both", expand=True)
    root.mainloop()
