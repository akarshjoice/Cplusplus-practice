def show_regression_dialog(self):
        if not self.regression_manager.client_socket:
            messagebox.showerror("Error", "Please connect to server first")
            return

        if self.regression_manager.is_regression_running():
            messagebox.showwarning("Warning", "Regression is already running")
            return

        dialog = Toplevel(self)
        dialog.title("Run Regression Tests")
        dialog.geometry("400x400")
        dialog.grid_columnconfigure(1, weight=1)  # Allow entries and listbox to expand horizontally

        # Username
        ttk.Label(dialog, text="Username:").grid(row=0, column=0, padx=5, pady=5, sticky="w")
        username_entry = ttk.Entry(dialog)
        username_entry.grid(row=0, column=1, padx=5, pady=5, sticky="ew")
        username_entry.insert(0, "user1")  # Default value for demonstration

        # Log Server IP
        ttk.Label(dialog, text="Log Server IP:").grid(row=1, column=0, padx=5, pady=5, sticky="w")
        logserverip_entry = ttk.Entry(dialog)
        logserverip_entry.grid(row=1, column=1, padx=5, pady=5, sticky="ew")
        logserverip_entry.insert(0, "192.168.1.100")  # Default value for demonstration

        # Test Cases Label
        ttk.Label(dialog, text="Select Test Cases:").grid(row=2, column=0, columnspan=2, padx=5, pady=5, sticky="w")

        # Test Cases Listbox
        test_listbox = tk.Listbox(dialog, selectmode="multiple", height=10)
        for test in self.regression_manager.test_cases:
            test_listbox.insert(tk.END, test["name"])
        test_listbox.grid(row=3, column=0, columnspan=2, padx=5, pady=5, sticky="nsew")
        dialog.grid_rowconfigure(3, weight=1)  # Allow listbox to expand vertically

        # Select All and Deselect All Buttons
        select_all_button = ttk.Button(dialog, text="Select All", 
                                     command=lambda: [test_listbox.select_set(0, tk.END)])
        select_all_button.grid(row=4, column=0, padx=5, pady=5, sticky="w")

        deselect_all_button = ttk.Button(dialog, text="Deselect All", 
                                       command=lambda: [test_listbox.selection_clear(0, tk.END)])
        deselect_all_button.grid(row=4, column=1, padx=5, pady=5, sticky="e")

        # Run Button
