import tkinter as tk
from tkinter import simpledialog

class InputDialog(tk.Toplevel):
    def __init__(self, parent):
        super().__init__(parent)
        self.result = None  # Store the user input
        
        self.title("Enter Details")
        self.geometry("300x200")
        
        # Protocol
        tk.Label(self, text="Protocol:").grid(row=0, column=0, padx=10, pady=5, sticky="w")
        self.protocol_entry = tk.Entry(self)
        self.protocol_entry.grid(row=0, column=1, padx=10, pady=5)

        # Tab Name
        tk.Label(self, text="Tab Name:").grid(row=1, column=0, padx=10, pady=5, sticky="w")
        self.tabname_entry = tk.Entry(self)
        self.tabname_entry.grid(row=1, column=1, padx=10, pady=5)

        # Log Filename
        tk.Label(self, text="Log Filename:").grid(row=2, column=0, padx=10, pady=5, sticky="w")
        self.logfile_entry = tk.Entry(self)
        self.logfile_entry.grid(row=2, column=1, padx=10, pady=5)

        # Buttons
        self.submit_button = tk.Button(self, text="OK", command=self.on_submit)
        self.submit_button.grid(row=3, column=0, columnspan=2, pady=10)
        
        self.protocol("WM_DELETE_WINDOW", self.on_cancel)  # Handle window close

        self.transient(parent)  # Keep dialog on top
        self.grab_set()  # Make it modal
        parent.wait_window(self)  # Pause execution until dialog closes

    def on_submit(self):
        self.result = (
            self.protocol_entry.get(),
            self.tabname_entry.get(),
            self.logfile_entry.get()
        )
        self.destroy()

    def on_cancel(self):
        self.result = None
        self.destroy()

# Example usage
def get_inputs():
    root = tk.Tk()
    root.withdraw()  # Hide main window
    dialog = InputDialog(root)
    if dialog.result:
        print("Protocol:", dialog.result[0])
        print("Tab Name:", dialog.result[1])
        print("Log Filename:", dialog.result[2])
    else:
        print("User canceled input")

get_inputs()
